
Nanjing Qinheng Microelectronics Co., Ltd. 2025.01

https://wch-ic.com


Directory
  |
  |-- CH32M030:RISC-V MCU
  |      |-- DS
  |      |      |--CH32M030DS0.PDF:CH32M030 datasheet
  |      |-- EVT: CH32M030EVT evaluation board and CH32M030 related software routines
  |      |      |-- PUB: 
  |      |      |      |-- CH32M030EVT Evaluation Board Manual.pdf:CH32M030EVT evaluation board instruction and project creation description
  |      |      |      |-- CH32M030SCH.pdf:Schematic of CH32M030EVT evaluation board
  |      |      |      |--  SCHPCB: Schematic and PCB of CH32M030 evaluation board
  |      |      |-- EXAM: 
  |      |      |      |-- SRC  
  |      |      |      |      |-- Core:kernal system header file
  |      |      |      |      |-- Startup:CH32M030 startup file
  |      |      |      |      |-- Peripheral:basic peripheral driver source file and header file
  |      |      |      |      |-- Debug:delay fuction:UART debugging source file and header file
  |      |      |      |-- ADC
  |      |      |      |      |-- ADC_AVG:
  |      |      |      |      |-- ADC_DMA:ADC uses DMA sampling routines
  |      |      |      |      |-- AnalogWatchdog:analog watchdog routine
  |      |      |      |      |-- Auto_Injection:automatic injection mode routine
  |      |      |      |      |-- Discontinuous_mode:discontinuous mode routine
  |      |      |      |      |-- ExtLines_Trigger:external lines trigger ADC conversion routine
  |      |      |      |      |-- TIM_Trigger:TIM trigger ADC conversion routine 
  |      |      |      |-- APPLICATION
  |      |      |      |      |-- SoftUART:I/O port simulation serial port routine  
  |      |      |      |      |-- Electric_Fan：motor routine
  |      |      |      |-- DMA
  |      |      |      |      |-- DMA_MEM2MEM:memory to memory mode routine
  |      |      |      |      |-- DMA_MEM2PERIP:see each peripheral subroutine for memory to peripheral mode and peripheral to memory mode routines
  |      |      |      |-- EXTI
  |      |      |      |      |-- EXTI:External Interrupt Routine
  |      |      |      |-- FLASH
  |      |      |      |      |-- FLASH_Program:FLASH erase/read/write, and fast programming 
  |      |      |      |      |-- FLASH_ECC:FLASH ECC Calibration Routine
  |      |      |      |-- GPIO
  |      |      |      |      |-- GPIO_Toggle:GPIO routines 
  |      |      |      |-- I2C
  |      |      |      |      |-- I2C_7bit_Mode:7-bit address mode, master / slave mode, transceiver routine
  |      |      |      |      |-- I2C_10bit_Mode:10 bit address mode, master / slave mode transceiver routine
  |      |      |      |      |-- I2C_DMA:I2C uses DMA, master / slave mode transceiver routine
  |      |      |      |      |-- I2C_EEPROM:I2C interface operation EEPROM peripheral routine
  |      |      |      |      |-- I2C_PEC:use PEC error check and master / slave mode transceiver routine
  |      |      |      |      |-- I2C_7bit_Interrupt_Mode:Use interrupt to receive and send routine 
  |      |      |      |-- IAP
  |      |      |      |      |-- UART_USB_IAP:IAP Upgrade Routine - Built-in Hex to Bin Tool and IAP Upgrade Tool
  |      |      |      |-- INT
  |      |      |      |      |-- Interrupt_VTF：use VTF IRQ interrupt routine  
  |      |      |      |      |-- VectorInRAM：Interrupt routines for the interrupt vector table in RAM
  |      |      |      |-- OPA
  |      |      |      |      |-- CMP:Comparator routine
  |      |      |      |      |-- CMP_IRQ:CMP interrupt routine
  |      |      |      |      |-- OPA_PGA:OPA PGA routine
  |      |      |      |-- PWR
  |      |      |      |      |-- Sleep_Mode:low power consumption, sleep mode routine
  |      |      |      |      |-- Standby_Mode:low power consumption, standby mode routine
  |      |      |      |      |-- Stop_Mode:low power consumption, stop mode routine
  |      |      |      |      |-- PWR_OVP:Overvoltage Protection Monitoring Routine
  |      |      |      |-- RCC
  |      |      |      |      |-- MCO:MCO pin clock output routine
  |      |      |      |      |-- GET_CLK:Get Clock Frequency Routine
  |      |      |      |      |-- HSI_Calibration:HSI calibrate routine  
  |      |      |      |-- SPI
  |      |      |      |      |-- 1Lines_half-duplex:single wire half duplex mode, master / slave mode, data transceiver
  |      |      |      |      |-- 2Lines_FullDuplex:two-wire full duplex mode, master / slave mode, data transceiver
  |      |      |      |      |-- FullDuplex_HardNSS:Hardware NSS mode, master / slave mode, data transceiver
  |      |      |      |      |-- SPI_CRC:use CRC error check and master / slave mode transceiver routine
  |      |      |      |      |-- SPI_DMA:SPI uses DMA, master / slave mode transceiver routine
  |      |      |      |      |-- SPI_FLASH:SPI interface operation flash peripheral routine
  |      |      |      |      |-- SPI_LCD:SPI interface operation FLASH  and LCD peripheral routines
  |      |      |      |-- SDI_Printf
  |      |      |      |      |-- SDI_Printf:debug interface SDI, virtual serial port.  
  |      |      |      |-- SYSTICK 
  |      |      |      |      |-- SYSTICK_Interrupt:Systick timer routine   
  |      |      |      |-- TIM
  |      |      |      |      |-- ADC_Capture:Capture ADC Module Signal Edge Routine
  |      |      |      |      |-- Bothedge_Capture:Double Edge Capture Routine
  |      |      |      |      |-- CenterAlignedMove:Shift routines in centrosymmetric mode
  |      |      |      |      |-- Clock_Select:clock source selection routine
  |      |      |      |      |-- ComplementaryOutput_DeadTime:complementary output and deadband insertion mode routines
  |      |      |      |      |-- Dead_Asymmetry:Deadband Asymmetry Routine
  |      |      |      |      |-- Encode:Timer encoder mode routines
  |      |      |      |      |-- ExtTrigger_Start_Two_Timer:external trigger starts two timer routines synchronously
  |      |      |      |      |-- IndependentOutput:Complementary Channel Independent Output Routine
  |      |      |      |      |-- Input_Capture:input capture routine
  |      |      |      |      |-- One_Pulse:single pulse output routine
  |      |      |      |      |-- Output_Compare_Mode:output comparison mode routine
  |      |      |      |      |-- PWM_Output:PWM output routine
  |      |      |      |      |-- Synchro_ExtTrigger:slave mode routine, including reset mode, gating mode and trigger mode
  |      |      |      |      |-- Synchro_Timer:timer synchronization mode
  |      |      |      |      |-- TIM_DMA:the timer uses DMA routines
  |      |      |      |      |-- TIM_INT:Timer Interrupt Routine
  |      |      |      |-- UART
  |      |      |      |      |-- UART_DMA:UART uses DMA, master / slave mode transceiver routine
  |      |      |      |      |-- UART_HalfDuplex:single wire half duplex mode, master / slave mode transceiver routine
  |      |      |      |      |-- UART_HardwareFlowControl:hardware flow control mode, master / slave mode, transceiver routine
  |      |      |      |      |-- UART_Interrupt:UART interrupt routine, master / slave mode transceiver routine
  |      |      |      |      |-- UART_MultiProcessorCommunication:multiprocessor communication mode routine
  |      |      |      |      |-- UART_Polling:polling transceiver mode, master / slave transceiver routine
  |      |      |      |      |-- UART_Printf:UART Print debugging routine
  |      |      |      |      |-- UART_SynchronousMode:synchronous mode, master / slave mode, transceiver routine
  |      |      |      |      |-- UART_Idle_Recv:UART use DMA receiving indeterminate length data routines
  |      |      |      |-- USB
  |      |      |      |      |-- USBFS
  |      |      |      |      |      |-- DEVICE
  |      |      |      |      |      |      |-- CH372:Simulates a custom USB device (CH372 device) with endpoints 1, 3, 5 down and 2, 4, 6 up. Data down from endpoint 1 is uploaded from endpoint 2 and not reversed, and data down from endpoint 3, 5 is uploaded from endpoint 4,6 and reversed.
  |      |      |      |      |      |      |-- Compatibility_HID:Simulates HID devices, with data transmitted up and down through the serial port.
  |      |      |      |      |      |      |-- CompositeKM:Simulate keyboard and mouse, use IO to simulate keystrokes, while simulated data can be uploaded through serial port 1.
  |      |      |      |      |      |      |-- CompositeKM_LowSpeed:Simulate low speed keyboard and mouse, use IO to simulate keystrokes, while simulated data can be uploaded through serial port 1.
  |      |      |      |      |      |      |-- MSC_U-Disk: Smulates a simple USB flash drive, optionally using on-chip Flash or external SPI-Flash
  |      |      |      |      |      |      |-- SimulateCDC:Simulate a CDC serial port and use serial port 1 to send and receive.
  |      |      |      |      |      |      |-- MSC_CD-ROM: Simulate CDROM, need external SPI-Flash
  |      |      |      |      |      |-- HOST_IAP
  |      |      |      |      |      |      |-- APP: APP used with HOST_IAP, the project has modified the starting location of the program, after compilation, you need to convert the file into a bin file and rename it to APP.bin
  |      |      |      |      |      |      |-- HOST_IAP:  The host U disk IAP routine based on the U disk read file routine finishing, read the file with the name bit APP.bin from the U disk, write it to the internal flash, check it and jump automatically.
  |      |      |      |      |      |-- HOST_KM: The host operates the keypad, gets the data of the endpoints uploaded by the keypad and prints it, supports U-port under level 1 hub
  |      |      |      |      |      |-- HOST_MTP_FileSystem:Enumeration process of a USB host to a device that supports MTP and PTP protocols, supports MTP and PTP protocols, and reads its files
  |      |      |      |      |      |-- Udisk_Lib:U disk file system library file  
  |      |      |      |      |      |-- Host_Udisk:USB host operation USB disk routine 
  |      |      |      |-- WWDG
  |      |      |      |      |-- WWDG:Window Watchdog Routine


